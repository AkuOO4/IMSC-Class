# -*- coding: utf-8 -*-
"""labcycle1_qstion5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S3Zsd6d0-xfO49TuLMf-2p6-8JWXSON3

5. Develop a program to read a string and perform the following 
operations:
*   Print all possible substring 
*   Print all possible substrings of length K
*   Print all possible substrings of length K with N distinct 
characters
* Print substring(s) of length maximum length with N distinct 
characters.
* Print all palindrome substrings
"""

def poss_strings(string,length):#1   #function to print all possible substrings
  i=0  
  lst=[]
  while i<=length+1:
    j=i+1
    while j<=length:
      lst.append(string[i:j])
      j+=1
    i+=1
  return lst

def sub_strings(string,length):#2   #function to  Print all possible substrings of length K
  i=0  
  lst=[]
  while i<=len(string):
    j=i+1
    while j<=len(string):
      if len(string[i:j])==length:
        lst.append(string[i:j])
      j+=1
    i+=1
  return lst
  
def distinct_char(string,length,n):#3  functio to Print all possible substrings of length K with N distinct characters
  lst=sub_strings(string,length)
  distinct_lst_n_char=[]
  i=0
  while i<=len(lst):
    j=i+1
    while j<=len(string):
      lst=(string[i:j])
      if (len(lst)==k and len(set(lst))==n):
        distinct_lst_n_char.append(lst)
      j+=1  
    i+=1
  return distinct_lst_n_char

def max_dist(n,string): #4 # function Print substring(s) of length maximum length with N distinct characters.
  lst=[]
  returner=[]
  i=0
  while i<=len(string):
    j=i+1
    while j<=len(string):
      s=string[i:j]
      if(len(set(s))==n):
        lst.append(s)
      j+=1
    i+=1
  maxi=len(max(lst,key=len))
  k=0
  while k<len(lst):
    if(len(lst[k])==maxi):
      print(lst[k],end=" ")
    k+=1


def palin(string):#5  #function to check for palin
  lst=[]
  i=0
  while i<=len(string):
    j=i+1
    while j<=len(string):
      s=string[i:j]
      temp=s[::-1]
      if(s==temp):
        print(s,end=" ")
      j+=1
    i+=1
  return lst

string=str(input("enter a string: ")) #all possible substring
print(poss_strings(string,len(string)))

k=int(input("enter the length of strings to be printed: "))
print(sub_strings(string,k))

n=int(input("enter the number of distinct characters needed: "))
print(distinct_char(string,k,n))

maxi=int(input("enter length maximum length with N distinct characters: "))
print(max_dist(maxi,string))

print("palindrome numbers are:\n")
palin(string)